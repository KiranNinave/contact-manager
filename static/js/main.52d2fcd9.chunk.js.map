{"version":3,"sources":["components/layouts/Header.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/contacts/FormInput.js","components/contacts/AddContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","style","color","branding","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","Provider","_Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","email","phone","dispatch","setState","inherits","createClass","key","value","console","log","children","Component","Consumer","Contact","show","_this2","onClick","cursor","float","Contacts","onDelete","newArray","map","Contact_Contact","FormInput","classnames","is-invalid","error","placeholder","onChange","AddContact","e","defineProperty","target","onSubmit","preventDefault","uuid","bind","contacts_FormInput","App","Context_Provider","layouts_Header","AddContact_AddContact","Contacts_Contacts","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52d2fcd9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-3 py-0 \">\r\n        <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\" style={{ color: \"#61dafb\" }}>\r\n            {props.branding}\r\n          </a>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <a href=\"/\" className=\"nav-link\" style={{ color: \"#61dafb\" }}>\r\n                  Home\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contacts: [\r\n        {\r\n          id: 1,\r\n          name: \"kiran\",\r\n          email: \"kiran@gmail.com\",\r\n          phone: \"1111-111-111\"\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"kiran\",\r\n          email: \"kiran@gmail.com\",\r\n          phone: \"2222-222-222\"\r\n        },\r\n        {\r\n          id: 3,\r\n          name: \"kiran\",\r\n          email: \"kiran@gmail.com\",\r\n          phone: \"3333-333-333\"\r\n        }\r\n      ],\r\n      dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    console.log(\"context api exicuted!\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nexport default class Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    phone: PropTypes.string.isRequired\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {this.props.name}{\" \"}\r\n                <i\r\n                  className=\"fas fa-sort-down\"\r\n                  onClick={() => this.setState({ show: !this.state.show })}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />{\" \"}\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ color: \"red\", cursor: \"pointer\", float: \"right\" }}\r\n                  onClick={() =>\r\n                    dispatch({ type: \"DELETE_CONTACT\", payload: this.props.id })\r\n                  }\r\n                />\r\n              </h4>\r\n              {this.state.show && (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    Email : {this.props.email}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Phone No: {this.props.phone}\r\n                  </li>\r\n                </ul>\r\n              )}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nexport default class Contacts extends Component {\r\n  onDelete = id => {\r\n    const newArray = this.state.contacts.filter(contact => contact.id !== id);\r\n    this.setState({\r\n      contacts: newArray\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <div className=\"container\">\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  id={contact.id}\r\n                  name={contact.name}\r\n                  email={contact.email}\r\n                  phone={contact.phone}\r\n                  onDelete={this.onDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst FormInput = props => (\r\n  <p>\r\n    <input\r\n      type={props.type}\r\n      name={props.name}\r\n      className={classnames(\"form-control\", {\r\n        \"is-invalid\": props.error\r\n      })}\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n    />\r\n    {props.error && <div className=\"invalid-feedback\">{props.error}</div>}\r\n  </p>\r\n);\r\n\r\nFormInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nFormInput.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default FormInput;\r\n","import React from \"react\";\r\nimport uuid from \"uuid\";\r\nimport { Consumer } from \"../../Context\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nexport default class AddContact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: uuid(),\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      error: {}\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    if (this.state.name === \"\") {\r\n      this.setState({ error: { name: \"name is required!\" } });\r\n      return;\r\n    } else if (this.state.email === \"\") {\r\n      this.setState({ error: { email: \"email is required!\" } });\r\n      return;\r\n    } else if (this.state.phone === \"\") {\r\n      this.setState({ error: { phone: \"phone no is required!\" } });\r\n      return;\r\n    }\r\n    this.setState({ id: \"\", name: \"\", email: \"\", phone: \"\", error: {} });\r\n    dispatch({ type: \"ADD_CONTACT\", payload: this.state });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">add contacts</div>\r\n              <div className=\"card-body\">\r\n                <form\r\n                  className=\"form-group\"\r\n                  onSubmit={this.onSubmit.bind(this, dispatch)}\r\n                >\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                    error={this.state.error.name}\r\n                  />\r\n                  <FormInput\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                    error={this.state.error.email}\r\n                  />\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone no\"\r\n                    value={this.state.phone}\r\n                    onChange={this.onChange}\r\n                    error={this.state.error.phone}\r\n                  />\r\n                  <p>\r\n                    <button type=\"submit\" className=\"form-control btn-info\">\r\n                      {\" \"}\r\n                      add{\" \"}\r\n                    </button>\r\n                  </p>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/layouts/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport AddContact from \"./components/contacts/AddContact\";\r\nimport { Provider } from \"./Context\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <div className=\"App\">\r\n          <Header branding=\"Contact Manager\" />\r\n          <AddContact />\r\n          <Contacts />\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}